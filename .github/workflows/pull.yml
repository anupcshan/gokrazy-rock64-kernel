name: Test Boot

on:
  pull_request:
    branches: [ main ]

jobs:

  build:
    name: CI
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v4
      with:
        # Run on the latest minor release of Go 1.25:
        go-version: ~1.25
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Ensure all files were formatted as per gofmt
      run: |
        [ "$(gofmt -l $(find . -name '*.go') 2>&1)" = "" ]

    - name: Amend Pull Request
      env:
        GITHUB_REPOSITORY: ${{ secrets.GITHUB_REPOSITORY }}
        GH_USER: ${{ secrets.GH_USER }}
        GH_AUTH_TOKEN: ${{ secrets.GH_AUTH_TOKEN }}
        TRAVIS_PULL_REQUEST: ${{ github.event.pull_request.number }}
        TRAVIS_PULL_REQUEST_BRANCH: ${{ github.event.pull_request.head.ref }}
        BOOTERY_URL: ${{ secrets.BOOTERY_URL }}
      if: ${{ env.GH_USER != 0 }}
      run: |
        GOPROXY=direct go install github.com/gokrazy/autoupdate/cmd/...@latest
        if ! gokr-has-label please-merge && ! gokr-has-label please-boot; then go install ./cmd/gokr-rebuild-kernel ./cmd/gokr-rebuild-uboot && gokr-rebuild-kernel -overwrite_container_executable=docker && gokr-rebuild-uboot -overwrite_container_executable=docker && GOPROXY=direct go install github.com/gokrazy/autoupdate/cmd/gokr-amend@latest && gokr-amend -set_label=please-boot *.dtb vmlinuz u-boot*.bin boot.scr; fi

    - uses: ./.github/actions/testboot
      with:
        github_repository: ${{ secrets.GITHUB_REPOSITORY }}
        gh_user: ${{ secrets.GH_USER }}
        gh_auth_token: ${{ secrets.GH_AUTH_TOKEN }}
        bootery_url: ${{ secrets.BOOTERY_URL }}
        bake_host: ${{ secrets.BAKE_HOST }}
        gokrazy_bakery_password: ${{ secrets.GOKRAZY_BAKERY_PASSWORD }}
        gokrazy_bake_password: ${{ secrets.GOKRAZY_BAKE_PASSWORD }}
        oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
        oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
